import"./index-BCAj_bCp.js";import{_ as p}from"./toast-Dy2nnG-1.js";import{V as c}from"./vitel-De4LWFz0.js";import{_ as m}from"./events-BTp7-g61.js";import{c as g,e,t as u,o as f}from"./vue.esm-bundler-CIUkA9VC.js";import{_ as y}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{s as h}from"./entry-preview-BsfXFv1X.js";import"./isArrayLike-DYVE1Yub.js";import"./isObjectLike-Dipz0mOK.js";import"./isArray-Dxzbedgu.js";const r={data(){return{Events:m}},computed:{servicesState(){return{services:Object.fromEntries(Object.entries(this.$services.services).map(([n])=>[n,`[${n} service]`]))}}}},b={class:"card mb-2"},v={class:"card-body"},_={class:"card mb-2"},q={class:"card-body"},k={class:"list-group"};function C(n,a,M,V,d,l){return f(),g("div",null,[e("div",b,[a[2]||(a[2]=e("div",{class:"card-header"},"$services.services",-1)),e("div",v,[a[1]||(a[1]=e("p",null,"Meta service access for Vue",-1)),e("pre",null,"$services: "+u(l.servicesState),1)])]),e("div",_,[a[3]||(a[3]=e("div",{class:"card-header"},"$services.require() for loading other services",-1)),e("div",q,[e("div",k,[e("a",{onClick:a[0]||(a[0]=N=>n.$services.require(d.Events)),class:"list-group-item list-group-item-action"},"$services.require(Events)")])])])])}const O=y(r,[["render",C]]);r.__docgenInfo={exportName:"default",displayName:"services.demo",type:1,props:[{name:"key",global:!0,description:"",tags:[],required:!1,type:"PropertyKey",declarations:[],schema:{kind:"enum",type:"PropertyKey",schema:["string","number","symbol"]}},{name:"ref",global:!0,description:"",tags:[],required:!1,type:"VNodeRef",declarations:[],schema:{kind:"enum",type:"VNodeRef",schema:["string","Ref<any, any>",{kind:"event",type:"(ref: Element | ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>, ... 4 more ..., any>, refs: Record<...>): void",schema:[]}]}},{name:"ref_for",global:!0,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"ref_key",global:!0,description:"",tags:[],required:!1,type:"string",declarations:[],schema:"string"},{name:"class",global:!0,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"},{name:"style",global:!0,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"}],events:[],slots:[],exposed:[{name:"Events",type:"DefineComponent<{}, {}, {}, {}, { all(): any; on(...args: any[]): any; off(...args: any[]): any; emit(...args: any[]): any; }, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., any>",description:"",declarations:[],schema:{kind:"object",type:"DefineComponent<{}, {}, {}, {}, { all(): any; on(...args: any[]): any; off(...args: any[]): any; emit(...args: any[]): any; }, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., any>",schema:{___isFragment:{name:"___isFragment",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:{kind:"array",type:"never",schema:[]}},___isTeleport:{name:"___isTeleport",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isSuspense:{name:"___isSuspense",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},setup:{name:"setup",global:!1,description:"",tags:[],required:!1,type:"(this: void, props: LooseRequired<Readonly<{}> & Readonly<{}> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }) => void | ... 2 more ... | Promise<...>",declarations:[],schema:{kind:"event",type:"(this: void, props: LooseRequired<Readonly<{}> & Readonly<{}> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }): void | ... 2 more ... | Promise<...>",schema:[]}},name:{name:"name",global:!1,description:"Returns the name of the function. Function names are read-only and can not be changed.",tags:[],required:!0,type:"string",declarations:[],schema:"string"},template:{name:"template",global:!1,description:"",tags:[],required:!1,type:"string | object",declarations:[],schema:{kind:"enum",type:"string | object",schema:["string","object"]}},render:{name:"render",global:!1,description:"",tags:[],required:!1,type:"Function",declarations:[],schema:{kind:"object",type:"Function",schema:{apply:{name:"apply",global:!1,description:"Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.",tags:[{name:"param",text:"thisArg The object to be used as the this object."},{name:"param",text:"argArray A set of arguments to be passed to the function."}],required:!0,type:"(this: Function, thisArg: any, argArray?: any) => any",declarations:[],schema:{kind:"event",type:"(this: Function, thisArg: any, argArray?: any): any",schema:[]}},call:{name:"call",global:!1,description:"Calls a method of an object, substituting another object for the current object.",tags:[{name:"param",text:"thisArg The object to be used as the current object."},{name:"param",text:"argArray A list of arguments to be passed to the method."}],required:!0,type:"(this: Function, thisArg: any, ...argArray: any[]) => any",declarations:[],schema:{kind:"event",type:"(this: Function, thisArg: any, ...argArray: any[]): any",schema:[]}},bind:{name:"bind",global:!1,description:`For a given function, creates a bound function that has the same body as the original function.
The this object of the bound function is associated with the specified object, and has the specified initial parameters.`,tags:[{name:"param",text:"thisArg An object to which the this keyword can refer inside the new function."},{name:"param",text:"argArray A list of arguments to be passed to the new function."}],required:!0,type:"(this: Function, thisArg: any, ...argArray: any[]) => any",declarations:[],schema:{kind:"event",type:"(this: Function, thisArg: any, ...argArray: any[]): any",schema:[]}},toString:{name:"toString",global:!1,description:"Returns a string representation of a function.",tags:[],required:!0,type:"() => string",declarations:[],schema:{kind:"event",type:"(): string"}},prototype:{name:"prototype",global:!1,description:"",tags:[],required:!0,type:"any",declarations:[],schema:"any"},length:{name:"length",global:!1,description:"",tags:[],required:!0,type:"number",declarations:[],schema:"number"},arguments:{name:"arguments",global:!1,description:"",tags:[],required:!0,type:"any",declarations:[],schema:"any"},caller:{name:"caller",global:!1,description:"",tags:[],required:!0,type:"Function",declarations:[],schema:"Function"},name:{name:"name",global:!1,description:"Returns the name of the function. Function names are read-only and can not be changed.",tags:[],required:!0,type:"string",declarations:[],schema:"string"},"__@hasInstance@423":{name:"__@hasInstance@423",global:!1,description:`Determines whether the given value inherits from this function if this function was used
as a constructor function.

A constructor function can control which objects are recognized as its instances by
'instanceof' by overriding this method.`,tags:[],required:!0,type:"(value: any) => boolean",declarations:[],schema:{kind:"event",type:"(value: any): boolean",schema:[]}}}}},components:{name:"components",global:!1,description:"",tags:[],required:!1,type:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",declarations:[],schema:{kind:"object",type:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",schema:{Teleport:{name:"Teleport",global:!1,description:"",tags:[],required:!0,type:"DefineComponent<TeleportProps, {}, {}, ComputedOptions, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., any>",declarations:[],schema:{kind:"object",type:"DefineComponent<TeleportProps, {}, {}, ComputedOptions, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., any>",schema:{___isFragment:{name:"___isFragment",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isTeleport:{name:"___isTeleport",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isSuspense:{name:"___isSuspense",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},setup:{name:"setup",global:!1,description:"",tags:[],required:!1,type:"(this: void, props: LooseRequired<Readonly<TeleportProps> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }) => void | ... 2 more ... | Promise<...>",declarations:[],schema:{kind:"event",type:"(this: void, props: LooseRequired<Readonly<TeleportProps> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }): void | ... 2 more ... | Promise<...>",schema:[]}},name:{name:"name",global:!1,description:"Returns the name of the function. Function names are read-only and can not be changed.",tags:[],required:!0,type:"string",declarations:[],schema:"string"},template:{name:"template",global:!1,description:"",tags:[],required:!1,type:"string | object",declarations:[],schema:"string | object"},render:{name:"render",global:!1,description:"",tags:[],required:!1,type:"Function",declarations:[],schema:"Function"},components:{name:"components",global:!1,description:"",tags:[],required:!1,type:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",declarations:[],schema:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"},directives:{name:"directives",global:!1,description:"",tags:[],required:!1,type:"GlobalDirectives & Record<string, Directive<any, any, string, string>>",declarations:[],schema:{kind:"object",type:"GlobalDirectives & Record<string, Directive<any, any, string, string>>",schema:{vShow:{name:"vShow",global:!1,description:"",tags:[],required:!0,type:'ObjectDirective<VShowElement, any, string, string> & { name?: "show"; }',declarations:[],schema:{kind:"object",type:'ObjectDirective<VShowElement, any, string, string> & { name?: "show"; }',schema:{created:{name:"created",global:!1,description:"",tags:[],required:!1,type:"DirectiveHook<VShowElement, null, any, string, string>",declarations:[],schema:{kind:"event",type:"(el: VShowElement, binding: DirectiveBinding<any, string, string>, vnode: VNode<any, VShowElement, { [key: string]: any; }>, prevVNode: null): void",schema:[]}},beforeMount:{name:"beforeMount",global:!1,description:"",tags:[],required:!1,type:"DirectiveHook<VShowElement, null, any, string, string>",declarations:[],schema:"DirectiveHook<VShowElement, null, any, string, string>"},mounted:{name:"mounted",global:!1,description:"",tags:[],required:!1,type:"DirectiveHook<VShowElement, null, any, string, string>",declarations:[],schema:"DirectiveHook<VShowElement, null, any, string, string>"},beforeUpdate:{name:"beforeUpdate",global:!1,description:"",tags:[],required:!1,type:"DirectiveHook<VShowElement, VNode<any, VShowElement, { [key: string]: any; }>, any, string, string>",declarations:[],schema:{kind:"event",type:"(el: VShowElement, binding: DirectiveBinding<any, string, string>, vnode: VNode<any, VShowElement, { [key: string]: any; }>, prevVNode: VNode<...>): void",schema:[]}},updated:{name:"updated",global:!1,description:"",tags:[],required:!1,type:"DirectiveHook<VShowElement, VNode<any, VShowElement, { [key: string]: any; }>, any, string, string>",declarations:[],schema:"DirectiveHook<VShowElement, VNode<any, VShowElement, { [key: string]: any; }>, any, string, string>"},beforeUnmount:{name:"beforeUnmount",global:!1,description:"",tags:[],required:!1,type:"DirectiveHook<VShowElement, null, any, string, string>",declarations:[],schema:"DirectiveHook<VShowElement, null, any, string, string>"},unmounted:{name:"unmounted",global:!1,description:"",tags:[],required:!1,type:"DirectiveHook<VShowElement, null, any, string, string>",declarations:[],schema:"DirectiveHook<VShowElement, null, any, string, string>"},getSSRProps:{name:"getSSRProps",global:!1,description:"",tags:[],required:!1,type:"SSRDirectiveHook<any, string, string>",declarations:[],schema:{kind:"event",type:"(binding: DirectiveBinding<any, string, string>, vnode: VNode<RendererNode, RendererElement, { [key: string]: any; }>): Data",schema:["any","string","string"]}},deep:{name:"deep",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},name:{name:"name",global:!1,description:"",tags:[],required:!1,type:'"show"',declarations:[],schema:'"show"'}}}},vOn:{name:"vOn",global:!1,description:"",tags:[],required:!0,type:"VOnDirective",declarations:[],schema:{kind:"enum",type:"VOnDirective",schema:["ObjectDirective<any, any, VOnModifiers, string>",{kind:"event",type:"(el: any, binding: DirectiveBinding<any, VOnModifiers, string>, vnode: VNode<any, any, { [key: string]: any; }>, prevVNode: any): void",schema:[]}]}},vBind:{name:"vBind",global:!1,description:"",tags:[],required:!0,type:"VModelDirective",declarations:[],schema:{kind:"enum",type:"VModelDirective",schema:['ModelDirective<HTMLInputElement | HTMLTextAreaElement, "number" | "trim" | "lazy">',"ModelDirective<HTMLInputElement, string>",'ModelDirective<HTMLSelectElement, "number">',"ObjectDirective<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement, any, string, string>"]}},vIf:{name:"vIf",global:!1,description:"",tags:[],required:!0,type:"Directive<any, boolean>",declarations:[],schema:{kind:"enum",type:"Directive<any, boolean>",schema:["ObjectDirective<any, boolean, string, string>",{kind:"event",type:"(el: any, binding: DirectiveBinding<boolean, string, string>, vnode: VNode<any, any, { [key: string]: any; }>, prevVNode: any): void",schema:[]}]}},VOnce:{name:"VOnce",global:!1,description:"",tags:[],required:!0,type:"Directive",declarations:[],schema:{kind:"enum",type:"Directive",schema:["ObjectDirective<any, any, string, string>",{kind:"event",type:"(el: any, binding: DirectiveBinding<any, string, string>, vnode: VNode<any, any, { [key: string]: any; }>, prevVNode: any): void",schema:[]}]}},VSlot:{name:"VSlot",global:!1,description:"",tags:[],required:!0,type:"Directive",declarations:[],schema:"Directive"}}}},inheritAttrs:{name:"inheritAttrs",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},emits:{name:"emits",global:!1,description:"",tags:[],required:!1,type:"ThisType<void> | (string[] & ThisType<void>)",declarations:[],schema:{kind:"enum",type:"ThisType<void> | (string[] & ThisType<void>)",schema:["ThisType<void>",{kind:"array",type:"string[] & ThisType<void>",schema:[]}]}},slots:{name:"slots",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:{kind:"object",type:"{}",schema:{}}},expose:{name:"expose",global:!1,description:"",tags:[],required:!1,type:"string[]",declarations:[],schema:{kind:"array",type:"string[]",schema:["string"]}},serverPrefetch:{name:"serverPrefetch",global:!1,description:"",tags:[],required:!1,type:"() => void | Promise<any>",declarations:[],schema:{kind:"event",type:"(): void | Promise<any>"}},compilerOptions:{name:"compilerOptions",global:!1,description:"",tags:[],required:!1,type:"RuntimeCompilerOptions",declarations:[],schema:{kind:"object",type:"RuntimeCompilerOptions",schema:{isCustomElement:{name:"isCustomElement",global:!1,description:"",tags:[],required:!1,type:"(tag: string) => boolean",declarations:[],schema:{kind:"event",type:"(tag: string): boolean",schema:[]}},whitespace:{name:"whitespace",global:!1,description:"",tags:[],required:!1,type:'"preserve" | "condense"',declarations:[],schema:{kind:"enum",type:'"preserve" | "condense"',schema:['"preserve"','"condense"']}},comments:{name:"comments",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},delimiters:{name:"delimiters",global:!1,description:"",tags:[],required:!1,type:"[string, string]",declarations:[],schema:{kind:"array",type:"[string, string]",schema:["string","string"]}}}}},call:{name:"call",global:!1,description:"Calls a method of an object, substituting another object for the current object.",tags:[{name:"param",text:"thisArg The object to be used as the current object."},{name:"param",text:"argArray A list of arguments to be passed to the method."}],required:!0,type:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)",declarations:[],schema:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)"},___defaults:{name:"___defaults",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},compatConfig:{name:"compatConfig",global:!1,description:"",tags:[],required:!1,type:"CompatConfig",declarations:[],schema:{kind:"object",type:"CompatConfig",schema:{GLOBAL_MOUNT:{name:"GLOBAL_MOUNT",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:{kind:"enum",type:'boolean | "suppress-warning"',schema:["false","true",'"suppress-warning"']}},GLOBAL_MOUNT_CONTAINER:{name:"GLOBAL_MOUNT_CONTAINER",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},GLOBAL_EXTEND:{name:"GLOBAL_EXTEND",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},GLOBAL_PROTOTYPE:{name:"GLOBAL_PROTOTYPE",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},GLOBAL_SET:{name:"GLOBAL_SET",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},GLOBAL_DELETE:{name:"GLOBAL_DELETE",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},GLOBAL_OBSERVABLE:{name:"GLOBAL_OBSERVABLE",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},GLOBAL_PRIVATE_UTIL:{name:"GLOBAL_PRIVATE_UTIL",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},CONFIG_SILENT:{name:"CONFIG_SILENT",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},CONFIG_DEVTOOLS:{name:"CONFIG_DEVTOOLS",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},CONFIG_KEY_CODES:{name:"CONFIG_KEY_CODES",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},CONFIG_PRODUCTION_TIP:{name:"CONFIG_PRODUCTION_TIP",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},CONFIG_IGNORED_ELEMENTS:{name:"CONFIG_IGNORED_ELEMENTS",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},CONFIG_WHITESPACE:{name:"CONFIG_WHITESPACE",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},CONFIG_OPTION_MERGE_STRATS:{name:"CONFIG_OPTION_MERGE_STRATS",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},INSTANCE_SET:{name:"INSTANCE_SET",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},INSTANCE_DELETE:{name:"INSTANCE_DELETE",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},INSTANCE_DESTROY:{name:"INSTANCE_DESTROY",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},INSTANCE_EVENT_EMITTER:{name:"INSTANCE_EVENT_EMITTER",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},INSTANCE_EVENT_HOOKS:{name:"INSTANCE_EVENT_HOOKS",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},INSTANCE_CHILDREN:{name:"INSTANCE_CHILDREN",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},INSTANCE_LISTENERS:{name:"INSTANCE_LISTENERS",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},INSTANCE_SCOPED_SLOTS:{name:"INSTANCE_SCOPED_SLOTS",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},INSTANCE_ATTRS_CLASS_STYLE:{name:"INSTANCE_ATTRS_CLASS_STYLE",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},OPTIONS_DATA_FN:{name:"OPTIONS_DATA_FN",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},OPTIONS_DATA_MERGE:{name:"OPTIONS_DATA_MERGE",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},OPTIONS_BEFORE_DESTROY:{name:"OPTIONS_BEFORE_DESTROY",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},OPTIONS_DESTROYED:{name:"OPTIONS_DESTROYED",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},WATCH_ARRAY:{name:"WATCH_ARRAY",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},PROPS_DEFAULT_THIS:{name:"PROPS_DEFAULT_THIS",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},V_ON_KEYCODE_MODIFIER:{name:"V_ON_KEYCODE_MODIFIER",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},CUSTOM_DIR:{name:"CUSTOM_DIR",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},ATTR_FALSE_VALUE:{name:"ATTR_FALSE_VALUE",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},ATTR_ENUMERATED_COERCION:{name:"ATTR_ENUMERATED_COERCION",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},TRANSITION_CLASSES:{name:"TRANSITION_CLASSES",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},TRANSITION_GROUP_ROOT:{name:"TRANSITION_GROUP_ROOT",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},COMPONENT_ASYNC:{name:"COMPONENT_ASYNC",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},COMPONENT_FUNCTIONAL:{name:"COMPONENT_FUNCTIONAL",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},COMPONENT_V_MODEL:{name:"COMPONENT_V_MODEL",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},RENDER_FUNCTION:{name:"RENDER_FUNCTION",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},FILTERS:{name:"FILTERS",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},PRIVATE_APIS:{name:"PRIVATE_APIS",global:!1,description:"",tags:[],required:!1,type:'boolean | "suppress-warning"',declarations:[],schema:'boolean | "suppress-warning"'},MODE:{name:"MODE",global:!1,description:"",tags:[],required:!1,type:"2 | 3 | ((comp: Component<any, any, any, ComputedOptions, MethodOptions, {}, any>) => 2 | 3)",declarations:[],schema:{kind:"enum",type:"2 | 3 | ((comp: Component<any, any, any, ComputedOptions, MethodOptions, {}, any>) => 2 | 3)",schema:["2","3",{kind:"event",type:"(comp: Component<any, any, any, ComputedOptions, MethodOptions, {}, any>): 2 | 3",schema:[]}]}}}}},data:{name:"data",global:!1,description:"",tags:[],required:!1,type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<TeleportProps>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>) => {}",declarations:[],schema:{kind:"event",type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<TeleportProps>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>): {}",schema:[]}},computed:{name:"computed",global:!1,description:"",tags:[],required:!1,type:"ComputedOptions",declarations:[],schema:"ComputedOptions"},methods:{name:"methods",global:!1,description:"",tags:[],required:!1,type:"MethodOptions",declarations:[],schema:{kind:"object",type:"MethodOptions",schema:{}}},watch:{name:"watch",global:!1,description:"",tags:[],required:!1,type:"ComponentWatchOptions",declarations:[],schema:"ComponentWatchOptions"},provide:{name:"provide",global:!1,description:"",tags:[],required:!1,type:"ComponentProvideOptions",declarations:[],schema:{kind:"enum",type:"ComponentProvideOptions",schema:["Function","ObjectProvideOptions"]}},inject:{name:"inject",global:!1,description:"",tags:[],required:!1,type:"{} | string[]",declarations:[],schema:{kind:"enum",type:"{} | string[]",schema:["{}","string[]"]}},filters:{name:"filters",global:!1,description:"",tags:[],required:!1,type:"Record<string, Function>",declarations:[],schema:"Record<string, Function>"},mixins:{name:"mixins",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin[]",declarations:[],schema:{kind:"array",type:"ComponentOptionsMixin[]",schema:["ComponentOptionsMixin"]}},extends:{name:"extends",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin",declarations:[],schema:"ComponentOptionsMixin"},beforeCreate:{name:"beforeCreate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},created:{name:"created",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},beforeMount:{name:"beforeMount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},mounted:{name:"mounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},beforeUpdate:{name:"beforeUpdate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},updated:{name:"updated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},activated:{name:"activated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},deactivated:{name:"deactivated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},beforeDestroy:{name:"beforeDestroy",global:!1,description:"",tags:[{name:"deprecated",text:"use `beforeUnmount` instead"}],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},beforeUnmount:{name:"beforeUnmount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},destroyed:{name:"destroyed",global:!1,description:"",tags:[{name:"deprecated",text:"use `unmounted` instead"}],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},unmounted:{name:"unmounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:{kind:"event",type:"(): void"}},renderTracked:{name:"renderTracked",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:{kind:"event",type:"(e: DebuggerEvent): void",schema:[]}},renderTriggered:{name:"renderTriggered",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},errorCaptured:{name:"errorCaptured",global:!1,description:"",tags:[],required:!1,type:"ErrorCapturedHook<unknown>",declarations:[],schema:{kind:"event",type:"(err: unknown, instance: ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>, ... 4 more ..., any>, info: string): boolean | void",schema:[]}},delimiters:{name:"delimiters",global:!1,description:"runtime compile only",tags:[{name:"deprecated",text:"use `compilerOptions.delimiters` instead."}],required:!1,type:"[string, string]",declarations:[],schema:"[string, string]"},___differentiator:{name:"___differentiator",global:!1,description:"#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",tags:[],required:!1,type:"string | number",declarations:[],schema:{kind:"enum",type:"string | number",schema:["string","number"]}},___isBuiltIn:{name:"___isBuiltIn",global:!1,description:"Compat build only, for bailing out of certain compatibility behavior",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},___file:{name:"___file",global:!1,description:"This one should be exposed so that devtools can make use of it",tags:[],required:!1,type:"string",declarations:[],schema:"string"},___name:{name:"___name",global:!1,description:"name inferred from filename",tags:[],required:!1,type:"string",declarations:[],schema:"string"},key:{name:"key",global:!1,description:"",tags:[],required:!1,type:"PropertyKey",declarations:[],schema:{kind:"enum",type:"PropertyKey",schema:["string","number","symbol"]}},ref:{name:"ref",global:!1,description:"",tags:[],required:!1,type:"VNodeRef",declarations:[],schema:{kind:"enum",type:"VNodeRef",schema:["string","Ref<any, any>",{kind:"event",type:"(ref: Element | ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>, ... 4 more ..., any>, refs: Record<...>): void",schema:[]}]}},ref_for:{name:"ref_for",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},ref_key:{name:"ref_key",global:!1,description:"",tags:[],required:!1,type:"string",declarations:[],schema:"string"},onVnodeBeforeMount:{name:"onVnodeBeforeMount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:{kind:"enum",type:"VNodeMountHook | VNodeMountHook[]",schema:[{kind:"event",type:"(vnode: VNode<RendererNode, RendererElement, { [key: string]: any; }>): void",schema:[{kind:"object",type:"RendererNode",schema:{}},{kind:"object",type:"RendererElement",schema:{}},{kind:"object",type:"{ [key: string]: any; }",schema:{}}]},{kind:"array",type:"VNodeMountHook[]",schema:["VNodeMountHook"]}]}},onVnodeMounted:{name:"onVnodeMounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeBeforeUpdate:{name:"onVnodeBeforeUpdate",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:{kind:"enum",type:"VNodeUpdateHook | VNodeUpdateHook[]",schema:[{kind:"event",type:"(vnode: VNode<RendererNode, RendererElement, { [key: string]: any; }>, oldVNode: VNode<RendererNode, RendererElement, { ...; }>): void",schema:["RendererNode","RendererElement","{ [key: string]: any; }"]},{kind:"array",type:"VNodeUpdateHook[]",schema:["VNodeUpdateHook"]}]}},onVnodeUpdated:{name:"onVnodeUpdated",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeBeforeUnmount:{name:"onVnodeBeforeUnmount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeUnmounted:{name:"onVnodeUnmounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},class:{name:"class",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"},style:{name:"style",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"}}}},Suspense:{name:"Suspense",global:!1,description:"",tags:[],required:!0,type:"DefineComponent<SuspenseProps, {}, {}, ComputedOptions, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., any>",declarations:[],schema:{kind:"object",type:"DefineComponent<SuspenseProps, {}, {}, ComputedOptions, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., any>",schema:{___isFragment:{name:"___isFragment",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isTeleport:{name:"___isTeleport",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isSuspense:{name:"___isSuspense",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},setup:{name:"setup",global:!1,description:"",tags:[],required:!1,type:"(this: void, props: LooseRequired<Readonly<SuspenseProps> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }) => void | ... 2 more ... | Promise<...>",declarations:[],schema:{kind:"event",type:"(this: void, props: LooseRequired<Readonly<SuspenseProps> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }): void | ... 2 more ... | Promise<...>",schema:[]}},name:{name:"name",global:!1,description:"Returns the name of the function. Function names are read-only and can not be changed.",tags:[],required:!0,type:"string",declarations:[],schema:"string"},template:{name:"template",global:!1,description:"",tags:[],required:!1,type:"string | object",declarations:[],schema:"string | object"},render:{name:"render",global:!1,description:"",tags:[],required:!1,type:"Function",declarations:[],schema:"Function"},components:{name:"components",global:!1,description:"",tags:[],required:!1,type:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",declarations:[],schema:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"},directives:{name:"directives",global:!1,description:"",tags:[],required:!1,type:"GlobalDirectives & Record<string, Directive<any, any, string, string>>",declarations:[],schema:"GlobalDirectives & Record<string, Directive<any, any, string, string>>"},inheritAttrs:{name:"inheritAttrs",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},emits:{name:"emits",global:!1,description:"",tags:[],required:!1,type:"ThisType<void> | (string[] & ThisType<void>)",declarations:[],schema:"ThisType<void> | (string[] & ThisType<void>)"},slots:{name:"slots",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},expose:{name:"expose",global:!1,description:"",tags:[],required:!1,type:"string[]",declarations:[],schema:"string[]"},serverPrefetch:{name:"serverPrefetch",global:!1,description:"",tags:[],required:!1,type:"() => void | Promise<any>",declarations:[],schema:"() => void | Promise<any>"},compilerOptions:{name:"compilerOptions",global:!1,description:"",tags:[],required:!1,type:"RuntimeCompilerOptions",declarations:[],schema:"RuntimeCompilerOptions"},call:{name:"call",global:!1,description:"Calls a method of an object, substituting another object for the current object.",tags:[{name:"param",text:"thisArg The object to be used as the current object."},{name:"param",text:"argArray A list of arguments to be passed to the method."}],required:!0,type:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)",declarations:[],schema:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)"},___defaults:{name:"___defaults",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},compatConfig:{name:"compatConfig",global:!1,description:"",tags:[],required:!1,type:"CompatConfig",declarations:[],schema:"CompatConfig"},data:{name:"data",global:!1,description:"",tags:[],required:!1,type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<SuspenseProps>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>) => {}",declarations:[],schema:{kind:"event",type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<SuspenseProps>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>): {}",schema:[]}},computed:{name:"computed",global:!1,description:"",tags:[],required:!1,type:"ComputedOptions",declarations:[],schema:"ComputedOptions"},methods:{name:"methods",global:!1,description:"",tags:[],required:!1,type:"MethodOptions",declarations:[],schema:"MethodOptions"},watch:{name:"watch",global:!1,description:"",tags:[],required:!1,type:"ComponentWatchOptions",declarations:[],schema:"ComponentWatchOptions"},provide:{name:"provide",global:!1,description:"",tags:[],required:!1,type:"ComponentProvideOptions",declarations:[],schema:"ComponentProvideOptions"},inject:{name:"inject",global:!1,description:"",tags:[],required:!1,type:"{} | string[]",declarations:[],schema:"{} | string[]"},filters:{name:"filters",global:!1,description:"",tags:[],required:!1,type:"Record<string, Function>",declarations:[],schema:"Record<string, Function>"},mixins:{name:"mixins",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin[]",declarations:[],schema:"ComponentOptionsMixin[]"},extends:{name:"extends",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin",declarations:[],schema:"ComponentOptionsMixin"},beforeCreate:{name:"beforeCreate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},created:{name:"created",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeMount:{name:"beforeMount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},mounted:{name:"mounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUpdate:{name:"beforeUpdate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},updated:{name:"updated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},activated:{name:"activated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},deactivated:{name:"deactivated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeDestroy:{name:"beforeDestroy",global:!1,description:"",tags:[{name:"deprecated",text:"use `beforeUnmount` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUnmount:{name:"beforeUnmount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},destroyed:{name:"destroyed",global:!1,description:"",tags:[{name:"deprecated",text:"use `unmounted` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},unmounted:{name:"unmounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},renderTracked:{name:"renderTracked",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},renderTriggered:{name:"renderTriggered",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},errorCaptured:{name:"errorCaptured",global:!1,description:"",tags:[],required:!1,type:"ErrorCapturedHook<unknown>",declarations:[],schema:"ErrorCapturedHook<unknown>"},delimiters:{name:"delimiters",global:!1,description:"runtime compile only",tags:[{name:"deprecated",text:"use `compilerOptions.delimiters` instead."}],required:!1,type:"[string, string]",declarations:[],schema:"[string, string]"},___differentiator:{name:"___differentiator",global:!1,description:"#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",tags:[],required:!1,type:"string | number",declarations:[],schema:"string | number"},___isBuiltIn:{name:"___isBuiltIn",global:!1,description:"Compat build only, for bailing out of certain compatibility behavior",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},___file:{name:"___file",global:!1,description:"This one should be exposed so that devtools can make use of it",tags:[],required:!1,type:"string",declarations:[],schema:"string"},___name:{name:"___name",global:!1,description:"name inferred from filename",tags:[],required:!1,type:"string",declarations:[],schema:"string"},key:{name:"key",global:!1,description:"",tags:[],required:!1,type:"PropertyKey",declarations:[],schema:"PropertyKey"},ref:{name:"ref",global:!1,description:"",tags:[],required:!1,type:"VNodeRef",declarations:[],schema:"VNodeRef"},ref_for:{name:"ref_for",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},ref_key:{name:"ref_key",global:!1,description:"",tags:[],required:!1,type:"string",declarations:[],schema:"string"},onVnodeBeforeMount:{name:"onVnodeBeforeMount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeMounted:{name:"onVnodeMounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeBeforeUpdate:{name:"onVnodeBeforeUpdate",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeUpdated:{name:"onVnodeUpdated",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeBeforeUnmount:{name:"onVnodeBeforeUnmount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeUnmounted:{name:"onVnodeUnmounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},class:{name:"class",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"},style:{name:"style",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"}}}},KeepAlive:{name:"KeepAlive",global:!1,description:"",tags:[],required:!0,type:"DefineComponent<KeepAliveProps, {}, {}, ComputedOptions, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., any>",declarations:[],schema:{kind:"object",type:"DefineComponent<KeepAliveProps, {}, {}, ComputedOptions, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 12 more ..., any>",schema:{___isFragment:{name:"___isFragment",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isTeleport:{name:"___isTeleport",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isSuspense:{name:"___isSuspense",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},setup:{name:"setup",global:!1,description:"",tags:[],required:!1,type:"(this: void, props: LooseRequired<Readonly<KeepAliveProps> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }) => void | ... 2 more ... | Promise<...>",declarations:[],schema:{kind:"event",type:"(this: void, props: LooseRequired<Readonly<KeepAliveProps> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }): void | ... 2 more ... | Promise<...>",schema:[]}},name:{name:"name",global:!1,description:"Returns the name of the function. Function names are read-only and can not be changed.",tags:[],required:!0,type:"string",declarations:[],schema:"string"},template:{name:"template",global:!1,description:"",tags:[],required:!1,type:"string | object",declarations:[],schema:"string | object"},render:{name:"render",global:!1,description:"",tags:[],required:!1,type:"Function",declarations:[],schema:"Function"},components:{name:"components",global:!1,description:"",tags:[],required:!1,type:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",declarations:[],schema:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"},directives:{name:"directives",global:!1,description:"",tags:[],required:!1,type:"GlobalDirectives & Record<string, Directive<any, any, string, string>>",declarations:[],schema:"GlobalDirectives & Record<string, Directive<any, any, string, string>>"},inheritAttrs:{name:"inheritAttrs",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},emits:{name:"emits",global:!1,description:"",tags:[],required:!1,type:"ThisType<void> | (string[] & ThisType<void>)",declarations:[],schema:"ThisType<void> | (string[] & ThisType<void>)"},slots:{name:"slots",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},expose:{name:"expose",global:!1,description:"",tags:[],required:!1,type:"string[]",declarations:[],schema:"string[]"},serverPrefetch:{name:"serverPrefetch",global:!1,description:"",tags:[],required:!1,type:"() => void | Promise<any>",declarations:[],schema:"() => void | Promise<any>"},compilerOptions:{name:"compilerOptions",global:!1,description:"",tags:[],required:!1,type:"RuntimeCompilerOptions",declarations:[],schema:"RuntimeCompilerOptions"},call:{name:"call",global:!1,description:"Calls a method of an object, substituting another object for the current object.",tags:[{name:"param",text:"thisArg The object to be used as the current object."},{name:"param",text:"argArray A list of arguments to be passed to the method."}],required:!0,type:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)",declarations:[],schema:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)"},___defaults:{name:"___defaults",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},compatConfig:{name:"compatConfig",global:!1,description:"",tags:[],required:!1,type:"CompatConfig",declarations:[],schema:"CompatConfig"},data:{name:"data",global:!1,description:"",tags:[],required:!1,type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<KeepAliveProps>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>) => {}",declarations:[],schema:{kind:"event",type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<KeepAliveProps>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>): {}",schema:[]}},computed:{name:"computed",global:!1,description:"",tags:[],required:!1,type:"ComputedOptions",declarations:[],schema:"ComputedOptions"},methods:{name:"methods",global:!1,description:"",tags:[],required:!1,type:"MethodOptions",declarations:[],schema:"MethodOptions"},watch:{name:"watch",global:!1,description:"",tags:[],required:!1,type:"ComponentWatchOptions",declarations:[],schema:"ComponentWatchOptions"},provide:{name:"provide",global:!1,description:"",tags:[],required:!1,type:"ComponentProvideOptions",declarations:[],schema:"ComponentProvideOptions"},inject:{name:"inject",global:!1,description:"",tags:[],required:!1,type:"{} | string[]",declarations:[],schema:"{} | string[]"},filters:{name:"filters",global:!1,description:"",tags:[],required:!1,type:"Record<string, Function>",declarations:[],schema:"Record<string, Function>"},mixins:{name:"mixins",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin[]",declarations:[],schema:"ComponentOptionsMixin[]"},extends:{name:"extends",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin",declarations:[],schema:"ComponentOptionsMixin"},beforeCreate:{name:"beforeCreate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},created:{name:"created",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeMount:{name:"beforeMount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},mounted:{name:"mounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUpdate:{name:"beforeUpdate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},updated:{name:"updated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},activated:{name:"activated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},deactivated:{name:"deactivated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeDestroy:{name:"beforeDestroy",global:!1,description:"",tags:[{name:"deprecated",text:"use `beforeUnmount` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUnmount:{name:"beforeUnmount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},destroyed:{name:"destroyed",global:!1,description:"",tags:[{name:"deprecated",text:"use `unmounted` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},unmounted:{name:"unmounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},renderTracked:{name:"renderTracked",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},renderTriggered:{name:"renderTriggered",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},errorCaptured:{name:"errorCaptured",global:!1,description:"",tags:[],required:!1,type:"ErrorCapturedHook<unknown>",declarations:[],schema:"ErrorCapturedHook<unknown>"},delimiters:{name:"delimiters",global:!1,description:"runtime compile only",tags:[{name:"deprecated",text:"use `compilerOptions.delimiters` instead."}],required:!1,type:"[string, string]",declarations:[],schema:"[string, string]"},___differentiator:{name:"___differentiator",global:!1,description:"#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",tags:[],required:!1,type:"string | number",declarations:[],schema:"string | number"},___isBuiltIn:{name:"___isBuiltIn",global:!1,description:"Compat build only, for bailing out of certain compatibility behavior",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},___file:{name:"___file",global:!1,description:"This one should be exposed so that devtools can make use of it",tags:[],required:!1,type:"string",declarations:[],schema:"string"},___name:{name:"___name",global:!1,description:"name inferred from filename",tags:[],required:!1,type:"string",declarations:[],schema:"string"},key:{name:"key",global:!1,description:"",tags:[],required:!1,type:"PropertyKey",declarations:[],schema:"PropertyKey"},ref:{name:"ref",global:!1,description:"",tags:[],required:!1,type:"VNodeRef",declarations:[],schema:"VNodeRef"},ref_for:{name:"ref_for",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},ref_key:{name:"ref_key",global:!1,description:"",tags:[],required:!1,type:"string",declarations:[],schema:"string"},onVnodeBeforeMount:{name:"onVnodeBeforeMount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeMounted:{name:"onVnodeMounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeBeforeUpdate:{name:"onVnodeBeforeUpdate",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeUpdated:{name:"onVnodeUpdated",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeBeforeUnmount:{name:"onVnodeBeforeUnmount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeUnmounted:{name:"onVnodeUnmounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},class:{name:"class",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"},style:{name:"style",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"}}}},BaseTransition:{name:"BaseTransition",global:!1,description:"",tags:[],required:!0,type:"DefineComponent<BaseTransitionProps<RendererElement>, {}, {}, ComputedOptions, MethodOptions, ComponentOptionsMixin, ... 13 more ..., any>",declarations:[],schema:{kind:"object",type:"DefineComponent<BaseTransitionProps<RendererElement>, {}, {}, ComputedOptions, MethodOptions, ComponentOptionsMixin, ... 13 more ..., any>",schema:{___isFragment:{name:"___isFragment",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isTeleport:{name:"___isTeleport",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isSuspense:{name:"___isSuspense",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},setup:{name:"setup",global:!1,description:"",tags:[],required:!1,type:"(this: void, props: LooseRequired<Readonly<BaseTransitionProps<RendererElement>> & {}>, ctx: { attrs: Data; slots: Readonly<...>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }) => void | ... 2 more ... | Promise<...>",declarations:[],schema:{kind:"event",type:"(this: void, props: LooseRequired<Readonly<BaseTransitionProps<RendererElement>> & {}>, ctx: { attrs: Data; slots: Readonly<...>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }): void | ... 2 more ... | Promise<...>",schema:[]}},name:{name:"name",global:!1,description:"Returns the name of the function. Function names are read-only and can not be changed.",tags:[],required:!0,type:"string",declarations:[],schema:"string"},template:{name:"template",global:!1,description:"",tags:[],required:!1,type:"string | object",declarations:[],schema:"string | object"},render:{name:"render",global:!1,description:"",tags:[],required:!1,type:"Function",declarations:[],schema:"Function"},components:{name:"components",global:!1,description:"",tags:[],required:!1,type:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",declarations:[],schema:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"},directives:{name:"directives",global:!1,description:"",tags:[],required:!1,type:"GlobalDirectives & Record<string, Directive<any, any, string, string>>",declarations:[],schema:"GlobalDirectives & Record<string, Directive<any, any, string, string>>"},inheritAttrs:{name:"inheritAttrs",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},emits:{name:"emits",global:!1,description:"",tags:[],required:!1,type:"ThisType<void> | (string[] & ThisType<void>)",declarations:[],schema:"ThisType<void> | (string[] & ThisType<void>)"},slots:{name:"slots",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},expose:{name:"expose",global:!1,description:"",tags:[],required:!1,type:"string[]",declarations:[],schema:"string[]"},serverPrefetch:{name:"serverPrefetch",global:!1,description:"",tags:[],required:!1,type:"() => void | Promise<any>",declarations:[],schema:"() => void | Promise<any>"},compilerOptions:{name:"compilerOptions",global:!1,description:"",tags:[],required:!1,type:"RuntimeCompilerOptions",declarations:[],schema:"RuntimeCompilerOptions"},call:{name:"call",global:!1,description:"Calls a method of an object, substituting another object for the current object.",tags:[{name:"param",text:"thisArg The object to be used as the current object."},{name:"param",text:"argArray A list of arguments to be passed to the method."}],required:!0,type:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)",declarations:[],schema:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)"},___defaults:{name:"___defaults",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},compatConfig:{name:"compatConfig",global:!1,description:"",tags:[],required:!1,type:"CompatConfig",declarations:[],schema:"CompatConfig"},data:{name:"data",global:!1,description:"",tags:[],required:!1,type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<BaseTransitionProps<RendererElement>>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ... 19 more ..., {}>) => {}",declarations:[],schema:{kind:"event",type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<BaseTransitionProps<RendererElement>>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ... 19 more ..., {}>): {}",schema:[]}},computed:{name:"computed",global:!1,description:"",tags:[],required:!1,type:"ComputedOptions",declarations:[],schema:"ComputedOptions"},methods:{name:"methods",global:!1,description:"",tags:[],required:!1,type:"MethodOptions",declarations:[],schema:"MethodOptions"},watch:{name:"watch",global:!1,description:"",tags:[],required:!1,type:"ComponentWatchOptions",declarations:[],schema:"ComponentWatchOptions"},provide:{name:"provide",global:!1,description:"",tags:[],required:!1,type:"ComponentProvideOptions",declarations:[],schema:"ComponentProvideOptions"},inject:{name:"inject",global:!1,description:"",tags:[],required:!1,type:"{} | string[]",declarations:[],schema:"{} | string[]"},filters:{name:"filters",global:!1,description:"",tags:[],required:!1,type:"Record<string, Function>",declarations:[],schema:"Record<string, Function>"},mixins:{name:"mixins",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin[]",declarations:[],schema:"ComponentOptionsMixin[]"},extends:{name:"extends",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin",declarations:[],schema:"ComponentOptionsMixin"},beforeCreate:{name:"beforeCreate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},created:{name:"created",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeMount:{name:"beforeMount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},mounted:{name:"mounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUpdate:{name:"beforeUpdate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},updated:{name:"updated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},activated:{name:"activated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},deactivated:{name:"deactivated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeDestroy:{name:"beforeDestroy",global:!1,description:"",tags:[{name:"deprecated",text:"use `beforeUnmount` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUnmount:{name:"beforeUnmount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},destroyed:{name:"destroyed",global:!1,description:"",tags:[{name:"deprecated",text:"use `unmounted` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},unmounted:{name:"unmounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},renderTracked:{name:"renderTracked",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},renderTriggered:{name:"renderTriggered",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},errorCaptured:{name:"errorCaptured",global:!1,description:"",tags:[],required:!1,type:"ErrorCapturedHook<unknown>",declarations:[],schema:"ErrorCapturedHook<unknown>"},delimiters:{name:"delimiters",global:!1,description:"runtime compile only",tags:[{name:"deprecated",text:"use `compilerOptions.delimiters` instead."}],required:!1,type:"[string, string]",declarations:[],schema:"[string, string]"},___differentiator:{name:"___differentiator",global:!1,description:"#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",tags:[],required:!1,type:"string | number",declarations:[],schema:"string | number"},___isBuiltIn:{name:"___isBuiltIn",global:!1,description:"Compat build only, for bailing out of certain compatibility behavior",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},___file:{name:"___file",global:!1,description:"This one should be exposed so that devtools can make use of it",tags:[],required:!1,type:"string",declarations:[],schema:"string"},___name:{name:"___name",global:!1,description:"name inferred from filename",tags:[],required:!1,type:"string",declarations:[],schema:"string"},key:{name:"key",global:!1,description:"",tags:[],required:!1,type:"PropertyKey",declarations:[],schema:"PropertyKey"},ref:{name:"ref",global:!1,description:"",tags:[],required:!1,type:"VNodeRef",declarations:[],schema:"VNodeRef"},ref_for:{name:"ref_for",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},ref_key:{name:"ref_key",global:!1,description:"",tags:[],required:!1,type:"string",declarations:[],schema:"string"},onVnodeBeforeMount:{name:"onVnodeBeforeMount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeMounted:{name:"onVnodeMounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeBeforeUpdate:{name:"onVnodeBeforeUpdate",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeUpdated:{name:"onVnodeUpdated",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeBeforeUnmount:{name:"onVnodeBeforeUnmount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeUnmounted:{name:"onVnodeUnmounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},class:{name:"class",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"},style:{name:"style",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"}}}},Transition:{name:"Transition",global:!1,description:"",tags:[],required:!0,type:"DefineComponent<TransitionProps>",declarations:[],schema:{kind:"object",type:"DefineComponent<TransitionProps>",schema:{___isFragment:{name:"___isFragment",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isTeleport:{name:"___isTeleport",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isSuspense:{name:"___isSuspense",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},setup:{name:"setup",global:!1,description:"",tags:[],required:!1,type:"(this: void, props: LooseRequired<Readonly<TransitionProps> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }) => void | ... 2 more ... | Promise<...>",declarations:[],schema:{kind:"event",type:"(this: void, props: LooseRequired<Readonly<TransitionProps> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }): void | ... 2 more ... | Promise<...>",schema:[]}},name:{name:"name",global:!1,description:"Returns the name of the function. Function names are read-only and can not be changed.",tags:[],required:!0,type:"string",declarations:[],schema:"string"},template:{name:"template",global:!1,description:"",tags:[],required:!1,type:"string | object",declarations:[],schema:"string | object"},render:{name:"render",global:!1,description:"",tags:[],required:!1,type:"Function",declarations:[],schema:"Function"},components:{name:"components",global:!1,description:"",tags:[],required:!1,type:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",declarations:[],schema:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"},directives:{name:"directives",global:!1,description:"",tags:[],required:!1,type:"GlobalDirectives & Record<string, Directive<any, any, string, string>>",declarations:[],schema:"GlobalDirectives & Record<string, Directive<any, any, string, string>>"},inheritAttrs:{name:"inheritAttrs",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},emits:{name:"emits",global:!1,description:"",tags:[],required:!1,type:"ThisType<void> | (string[] & ThisType<void>)",declarations:[],schema:"ThisType<void> | (string[] & ThisType<void>)"},slots:{name:"slots",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},expose:{name:"expose",global:!1,description:"",tags:[],required:!1,type:"string[]",declarations:[],schema:"string[]"},serverPrefetch:{name:"serverPrefetch",global:!1,description:"",tags:[],required:!1,type:"() => void | Promise<any>",declarations:[],schema:"() => void | Promise<any>"},compilerOptions:{name:"compilerOptions",global:!1,description:"",tags:[],required:!1,type:"RuntimeCompilerOptions",declarations:[],schema:"RuntimeCompilerOptions"},call:{name:"call",global:!1,description:"Calls a method of an object, substituting another object for the current object.",tags:[{name:"param",text:"thisArg The object to be used as the current object."},{name:"param",text:"argArray A list of arguments to be passed to the method."}],required:!0,type:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)",declarations:[],schema:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)"},___defaults:{name:"___defaults",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},compatConfig:{name:"compatConfig",global:!1,description:"",tags:[],required:!1,type:"CompatConfig",declarations:[],schema:"CompatConfig"},data:{name:"data",global:!1,description:"",tags:[],required:!1,type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<TransitionProps>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>) => {}",declarations:[],schema:{kind:"event",type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<TransitionProps>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>): {}",schema:[]}},computed:{name:"computed",global:!1,description:"",tags:[],required:!1,type:"ComputedOptions",declarations:[],schema:"ComputedOptions"},methods:{name:"methods",global:!1,description:"",tags:[],required:!1,type:"MethodOptions",declarations:[],schema:"MethodOptions"},watch:{name:"watch",global:!1,description:"",tags:[],required:!1,type:"ComponentWatchOptions",declarations:[],schema:"ComponentWatchOptions"},provide:{name:"provide",global:!1,description:"",tags:[],required:!1,type:"ComponentProvideOptions",declarations:[],schema:"ComponentProvideOptions"},inject:{name:"inject",global:!1,description:"",tags:[],required:!1,type:"{} | string[]",declarations:[],schema:"{} | string[]"},filters:{name:"filters",global:!1,description:"",tags:[],required:!1,type:"Record<string, Function>",declarations:[],schema:"Record<string, Function>"},mixins:{name:"mixins",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin[]",declarations:[],schema:"ComponentOptionsMixin[]"},extends:{name:"extends",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin",declarations:[],schema:"ComponentOptionsMixin"},beforeCreate:{name:"beforeCreate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},created:{name:"created",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeMount:{name:"beforeMount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},mounted:{name:"mounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUpdate:{name:"beforeUpdate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},updated:{name:"updated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},activated:{name:"activated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},deactivated:{name:"deactivated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeDestroy:{name:"beforeDestroy",global:!1,description:"",tags:[{name:"deprecated",text:"use `beforeUnmount` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUnmount:{name:"beforeUnmount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},destroyed:{name:"destroyed",global:!1,description:"",tags:[{name:"deprecated",text:"use `unmounted` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},unmounted:{name:"unmounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},renderTracked:{name:"renderTracked",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},renderTriggered:{name:"renderTriggered",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},errorCaptured:{name:"errorCaptured",global:!1,description:"",tags:[],required:!1,type:"ErrorCapturedHook<unknown>",declarations:[],schema:"ErrorCapturedHook<unknown>"},delimiters:{name:"delimiters",global:!1,description:"runtime compile only",tags:[{name:"deprecated",text:"use `compilerOptions.delimiters` instead."}],required:!1,type:"[string, string]",declarations:[],schema:"[string, string]"},___differentiator:{name:"___differentiator",global:!1,description:"#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",tags:[],required:!1,type:"string | number",declarations:[],schema:"string | number"},___isBuiltIn:{name:"___isBuiltIn",global:!1,description:"Compat build only, for bailing out of certain compatibility behavior",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},___file:{name:"___file",global:!1,description:"This one should be exposed so that devtools can make use of it",tags:[],required:!1,type:"string",declarations:[],schema:"string"},___name:{name:"___name",global:!1,description:"name inferred from filename",tags:[],required:!1,type:"string",declarations:[],schema:"string"},key:{name:"key",global:!1,description:"",tags:[],required:!1,type:"PropertyKey",declarations:[],schema:"PropertyKey"},ref:{name:"ref",global:!1,description:"",tags:[],required:!1,type:"VNodeRef",declarations:[],schema:"VNodeRef"},ref_for:{name:"ref_for",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},ref_key:{name:"ref_key",global:!1,description:"",tags:[],required:!1,type:"string",declarations:[],schema:"string"},onVnodeBeforeMount:{name:"onVnodeBeforeMount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeMounted:{name:"onVnodeMounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeBeforeUpdate:{name:"onVnodeBeforeUpdate",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeUpdated:{name:"onVnodeUpdated",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeBeforeUnmount:{name:"onVnodeBeforeUnmount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeUnmounted:{name:"onVnodeUnmounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},class:{name:"class",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"},style:{name:"style",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"}}}},TransitionGroup:{name:"TransitionGroup",global:!1,description:"",tags:[],required:!0,type:"DefineComponent<TransitionGroupProps>",declarations:[],schema:{kind:"object",type:"DefineComponent<TransitionGroupProps>",schema:{___isFragment:{name:"___isFragment",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isTeleport:{name:"___isTeleport",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},___isSuspense:{name:"___isSuspense",global:!1,description:"",tags:[],required:!1,type:"never",declarations:[],schema:"never"},setup:{name:"setup",global:!1,description:"",tags:[],required:!1,type:"(this: void, props: LooseRequired<Readonly<TransitionGroupProps> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }) => void | ... 2 more ... | Promise<...>",declarations:[],schema:{kind:"event",type:"(this: void, props: LooseRequired<Readonly<TransitionGroupProps> & {}>, ctx: { attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<...> = Record<...>>(exposed?: Exposed) => void; }): void | ... 2 more ... | Promise<...>",schema:[]}},name:{name:"name",global:!1,description:"Returns the name of the function. Function names are read-only and can not be changed.",tags:[],required:!0,type:"string",declarations:[],schema:"string"},template:{name:"template",global:!1,description:"",tags:[],required:!1,type:"string | object",declarations:[],schema:"string | object"},render:{name:"render",global:!1,description:"",tags:[],required:!1,type:"Function",declarations:[],schema:"Function"},components:{name:"components",global:!1,description:"",tags:[],required:!1,type:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>",declarations:[],schema:"GlobalComponents & Record<string, Component<any, any, any, ComputedOptions, MethodOptions, {}, any>>"},directives:{name:"directives",global:!1,description:"",tags:[],required:!1,type:"GlobalDirectives & Record<string, Directive<any, any, string, string>>",declarations:[],schema:"GlobalDirectives & Record<string, Directive<any, any, string, string>>"},inheritAttrs:{name:"inheritAttrs",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},emits:{name:"emits",global:!1,description:"",tags:[],required:!1,type:"ThisType<void> | (string[] & ThisType<void>)",declarations:[],schema:"ThisType<void> | (string[] & ThisType<void>)"},slots:{name:"slots",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},expose:{name:"expose",global:!1,description:"",tags:[],required:!1,type:"string[]",declarations:[],schema:"string[]"},serverPrefetch:{name:"serverPrefetch",global:!1,description:"",tags:[],required:!1,type:"() => void | Promise<any>",declarations:[],schema:"() => void | Promise<any>"},compilerOptions:{name:"compilerOptions",global:!1,description:"",tags:[],required:!1,type:"RuntimeCompilerOptions",declarations:[],schema:"RuntimeCompilerOptions"},call:{name:"call",global:!1,description:"Calls a method of an object, substituting another object for the current object.",tags:[{name:"param",text:"thisArg The object to be used as the current object."},{name:"param",text:"argArray A list of arguments to be passed to the method."}],required:!0,type:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)",declarations:[],schema:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)"},___defaults:{name:"___defaults",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},compatConfig:{name:"compatConfig",global:!1,description:"",tags:[],required:!1,type:"CompatConfig",declarations:[],schema:"CompatConfig"},data:{name:"data",global:!1,description:"",tags:[],required:!1,type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<TransitionGroupProps>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>) => {}",declarations:[],schema:{kind:"event",type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<Readonly<TransitionGroupProps>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>): {}",schema:[]}},computed:{name:"computed",global:!1,description:"",tags:[],required:!1,type:"ComputedOptions",declarations:[],schema:"ComputedOptions"},methods:{name:"methods",global:!1,description:"",tags:[],required:!1,type:"MethodOptions",declarations:[],schema:"MethodOptions"},watch:{name:"watch",global:!1,description:"",tags:[],required:!1,type:"ComponentWatchOptions",declarations:[],schema:"ComponentWatchOptions"},provide:{name:"provide",global:!1,description:"",tags:[],required:!1,type:"ComponentProvideOptions",declarations:[],schema:"ComponentProvideOptions"},inject:{name:"inject",global:!1,description:"",tags:[],required:!1,type:"{} | string[]",declarations:[],schema:"{} | string[]"},filters:{name:"filters",global:!1,description:"",tags:[],required:!1,type:"Record<string, Function>",declarations:[],schema:"Record<string, Function>"},mixins:{name:"mixins",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin[]",declarations:[],schema:"ComponentOptionsMixin[]"},extends:{name:"extends",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin",declarations:[],schema:"ComponentOptionsMixin"},beforeCreate:{name:"beforeCreate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},created:{name:"created",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeMount:{name:"beforeMount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},mounted:{name:"mounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUpdate:{name:"beforeUpdate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},updated:{name:"updated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},activated:{name:"activated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},deactivated:{name:"deactivated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeDestroy:{name:"beforeDestroy",global:!1,description:"",tags:[{name:"deprecated",text:"use `beforeUnmount` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUnmount:{name:"beforeUnmount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},destroyed:{name:"destroyed",global:!1,description:"",tags:[{name:"deprecated",text:"use `unmounted` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},unmounted:{name:"unmounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},renderTracked:{name:"renderTracked",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},renderTriggered:{name:"renderTriggered",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},errorCaptured:{name:"errorCaptured",global:!1,description:"",tags:[],required:!1,type:"ErrorCapturedHook<unknown>",declarations:[],schema:"ErrorCapturedHook<unknown>"},delimiters:{name:"delimiters",global:!1,description:"runtime compile only",tags:[{name:"deprecated",text:"use `compilerOptions.delimiters` instead."}],required:!1,type:"[string, string]",declarations:[],schema:"[string, string]"},___differentiator:{name:"___differentiator",global:!1,description:"#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",tags:[],required:!1,type:"string | number",declarations:[],schema:"string | number"},___isBuiltIn:{name:"___isBuiltIn",global:!1,description:"Compat build only, for bailing out of certain compatibility behavior",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},___file:{name:"___file",global:!1,description:"This one should be exposed so that devtools can make use of it",tags:[],required:!1,type:"string",declarations:[],schema:"string"},___name:{name:"___name",global:!1,description:"name inferred from filename",tags:[],required:!1,type:"string",declarations:[],schema:"string"},key:{name:"key",global:!1,description:"",tags:[],required:!1,type:"PropertyKey",declarations:[],schema:"PropertyKey"},ref:{name:"ref",global:!1,description:"",tags:[],required:!1,type:"VNodeRef",declarations:[],schema:"VNodeRef"},ref_for:{name:"ref_for",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},ref_key:{name:"ref_key",global:!1,description:"",tags:[],required:!1,type:"string",declarations:[],schema:"string"},onVnodeBeforeMount:{name:"onVnodeBeforeMount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeMounted:{name:"onVnodeMounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeBeforeUpdate:{name:"onVnodeBeforeUpdate",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeUpdated:{name:"onVnodeUpdated",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeBeforeUnmount:{name:"onVnodeBeforeUnmount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeUnmounted:{name:"onVnodeUnmounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},class:{name:"class",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"},style:{name:"style",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"}}}}}}},directives:{name:"directives",global:!1,description:"",tags:[],required:!1,type:"GlobalDirectives & Record<string, Directive<any, any, string, string>>",declarations:[],schema:"GlobalDirectives & Record<string, Directive<any, any, string, string>>"},inheritAttrs:{name:"inheritAttrs",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},emits:{name:"emits",global:!1,description:"",tags:[],required:!1,type:"(string[] | {}) & ThisType<void>",declarations:[],schema:{kind:"enum",type:"(string[] | {}) & ThisType<void>",schema:["string[] & ThisType<void>",{kind:"object",type:"{} & ThisType<void>",schema:{}}]}},slots:{name:"slots",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},expose:{name:"expose",global:!1,description:"",tags:[],required:!1,type:"string[]",declarations:[],schema:"string[]"},serverPrefetch:{name:"serverPrefetch",global:!1,description:"",tags:[],required:!1,type:"() => void | Promise<any>",declarations:[],schema:"() => void | Promise<any>"},compilerOptions:{name:"compilerOptions",global:!1,description:"",tags:[],required:!1,type:"RuntimeCompilerOptions",declarations:[],schema:"RuntimeCompilerOptions"},call:{name:"call",global:!1,description:"Calls a method of an object, substituting another object for the current object.",tags:[{name:"param",text:"thisArg The object to be used as the current object."},{name:"param",text:"argArray A list of arguments to be passed to the method."}],required:!0,type:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)",declarations:[],schema:"((this: Function, thisArg: any, ...argArray: any[]) => any) & ((this: unknown, ...args: unknown[]) => never)"},___defaults:{name:"___defaults",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},compatConfig:{name:"compatConfig",global:!1,description:"",tags:[],required:!1,type:"CompatConfig",declarations:[],schema:"CompatConfig"},data:{name:"data",global:!1,description:"",tags:[],required:!1,type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<ToResolvedProps<{}, {}>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>) => {}",declarations:[],schema:{kind:"event",type:"(this: CreateComponentPublicInstanceWithMixins<...>, vm: CreateComponentPublicInstanceWithMixins<ToResolvedProps<{}, {}>, {}, {}, {}, MethodOptions, ComponentOptionsMixin, ComponentOptionsMixin, ... 18 more ..., {}>): {}",schema:[]}},computed:{name:"computed",global:!1,description:"",tags:[],required:!1,type:"{}",declarations:[],schema:"{}"},methods:{name:"methods",global:!1,description:"",tags:[],required:!1,type:"{ all(): any; on(...args: any[]): any; off(...args: any[]): any; emit(...args: any[]): any; }",declarations:[],schema:{kind:"object",type:"{ all(): any; on(...args: any[]): any; off(...args: any[]): any; emit(...args: any[]): any; }",schema:{all:{name:"all",global:!1,description:"",tags:[],required:!0,type:"() => any",declarations:[],schema:{kind:"event",type:"(): any"}},on:{name:"on",global:!1,description:"",tags:[],required:!0,type:"(...args: any[]) => any",declarations:[],schema:{kind:"event",type:"(...args: any[]): any",schema:["any"]}},off:{name:"off",global:!1,description:"",tags:[],required:!0,type:"(...args: any[]) => any",declarations:[],schema:{kind:"event",type:"(...args: any[]): any",schema:["any"]}},emit:{name:"emit",global:!1,description:"",tags:[],required:!0,type:"(...args: any[]) => any",declarations:[],schema:{kind:"event",type:"(...args: any[]): any",schema:["any"]}}}}},watch:{name:"watch",global:!1,description:"",tags:[],required:!1,type:"ComponentWatchOptions",declarations:[],schema:"ComponentWatchOptions"},provide:{name:"provide",global:!1,description:"",tags:[],required:!1,type:"ComponentProvideOptions",declarations:[],schema:"ComponentProvideOptions"},inject:{name:"inject",global:!1,description:"",tags:[],required:!1,type:"{} | string[]",declarations:[],schema:"{} | string[]"},filters:{name:"filters",global:!1,description:"",tags:[],required:!1,type:"Record<string, Function>",declarations:[],schema:"Record<string, Function>"},mixins:{name:"mixins",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin[]",declarations:[],schema:"ComponentOptionsMixin[]"},extends:{name:"extends",global:!1,description:"",tags:[],required:!1,type:"ComponentOptionsMixin",declarations:[],schema:"ComponentOptionsMixin"},beforeCreate:{name:"beforeCreate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},created:{name:"created",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeMount:{name:"beforeMount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},mounted:{name:"mounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUpdate:{name:"beforeUpdate",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},updated:{name:"updated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},activated:{name:"activated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},deactivated:{name:"deactivated",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeDestroy:{name:"beforeDestroy",global:!1,description:"",tags:[{name:"deprecated",text:"use `beforeUnmount` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},beforeUnmount:{name:"beforeUnmount",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},destroyed:{name:"destroyed",global:!1,description:"",tags:[{name:"deprecated",text:"use `unmounted` instead"}],required:!1,type:"() => void",declarations:[],schema:"() => void"},unmounted:{name:"unmounted",global:!1,description:"",tags:[],required:!1,type:"() => void",declarations:[],schema:"() => void"},renderTracked:{name:"renderTracked",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},renderTriggered:{name:"renderTriggered",global:!1,description:"",tags:[],required:!1,type:"DebuggerHook",declarations:[],schema:"DebuggerHook"},errorCaptured:{name:"errorCaptured",global:!1,description:"",tags:[],required:!1,type:"ErrorCapturedHook<unknown>",declarations:[],schema:"ErrorCapturedHook<unknown>"},delimiters:{name:"delimiters",global:!1,description:"runtime compile only",tags:[{name:"deprecated",text:"use `compilerOptions.delimiters` instead."}],required:!1,type:"[string, string]",declarations:[],schema:"[string, string]"},___differentiator:{name:"___differentiator",global:!1,description:"#3468\n\ntype-only, used to assist Mixin's type inference,\ntypescript will try to simplify the inferred `Mixin` type,\nwith the `__differentiator`, typescript won't be able to combine different mixins,\nbecause the `__differentiator` will be different",tags:[],required:!1,type:'"emit" | "all" | "on" | "off"',declarations:[],schema:{kind:"enum",type:'"emit" | "all" | "on" | "off"',schema:['"emit"','"all"','"on"','"off"']}},___isBuiltIn:{name:"___isBuiltIn",global:!1,description:"Compat build only, for bailing out of certain compatibility behavior",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},___file:{name:"___file",global:!1,description:"This one should be exposed so that devtools can make use of it",tags:[],required:!1,type:"string",declarations:[],schema:"string"},___name:{name:"___name",global:!1,description:"name inferred from filename",tags:[],required:!1,type:"string",declarations:[],schema:"string"},key:{name:"key",global:!1,description:"",tags:[],required:!1,type:"PropertyKey",declarations:[],schema:"PropertyKey"},ref:{name:"ref",global:!1,description:"",tags:[],required:!1,type:"VNodeRef",declarations:[],schema:"VNodeRef"},ref_for:{name:"ref_for",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:"boolean"},ref_key:{name:"ref_key",global:!1,description:"",tags:[],required:!1,type:"string",declarations:[],schema:"string"},onVnodeBeforeMount:{name:"onVnodeBeforeMount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeMounted:{name:"onVnodeMounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeBeforeUpdate:{name:"onVnodeBeforeUpdate",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeUpdated:{name:"onVnodeUpdated",global:!1,description:"",tags:[],required:!1,type:"VNodeUpdateHook | VNodeUpdateHook[]",declarations:[],schema:"VNodeUpdateHook | VNodeUpdateHook[]"},onVnodeBeforeUnmount:{name:"onVnodeBeforeUnmount",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},onVnodeUnmounted:{name:"onVnodeUnmounted",global:!1,description:"",tags:[],required:!1,type:"VNodeMountHook | VNodeMountHook[]",declarations:[],schema:"VNodeMountHook | VNodeMountHook[]"},class:{name:"class",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"},style:{name:"style",global:!1,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"}}}},{name:"servicesState",type:"{ services: { [k: string]: string; }; }",description:"",declarations:[],schema:{kind:"object",type:"{ services: { [k: string]: string; }; }",schema:{services:{name:"services",global:!1,description:"",tags:[],required:!0,type:"{ [k: string]: string; }",declarations:[],schema:{kind:"object",type:"{ [k: string]: string; }",schema:{}}}}}}],sourceFiles:"/home/runner/work/Vitel/Vitel/services/services.demo.vue"};h(n=>{n.use(c),n.service("$toast",p)});const S={title:"Services/Services",component:O,tags:["autodocs"],argTypes:{}},o={};var t,s,i;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:"{}",...(i=(s=o.parameters)==null?void 0:s.docs)==null?void 0:i.source}}};const I=["Example"];export{o as Example,I as __namedExportsOrder,S as default};
